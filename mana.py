from OrderedEnum import OrderedEnum
from color import Color
from types import FunctionType


class UnplayableCost():
    """
    A class representing a lack of a cost, see rule 117.6.
    """
    pass

class Mana():
    """
    Mana can be considered the objects with which (most) costs are paid, there are
    5 colors of mana, as well as colorless mana, which can be considered to have no
    color.

    Mana is generated by land, this is distinct from mana *costs* which are a specific
    subset of costs, the things that you pay to cast spells and activate abilities.
    """
    def __init__(self, color: Color, modifiers: FunctionType):
        pass

class ManaSymbol(OrderedEnum):
    """
    The ManaSymbol class represents the symbols atop cards, they are generally going to
    create ManaCosts, but could in some cases create other kinds of costs.
    """
    pass

class ManaCost():
    """
    TODO: subclass cost, create Cost class
    A ManaCost is a type of cost that can be paid with mana (duh!).  Specifically, a
    ManaCost should be aware that certain types of mana
    """
    pass